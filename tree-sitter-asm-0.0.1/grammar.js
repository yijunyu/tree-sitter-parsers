module.exports = grammar({
    name: 'asm', //Applicable for our dataset

    //word: $ => $.identifier, //这行的存在会产生Undefined symbol `ReferenceError`

    rules: {
        prog: $ => repeat($._line),
        _line_break: $ => '\n',
        comment: $ => choice(/#.*/, /===.*/),
        _line: $ => seq(
            $._address,
            ':',
            repeat($._two_bytes),
            optional(choice(
              $.adc,
              $.adcx,
              $.add,
              $.addb,
              $.addl,
              $.addq,
              $.addr32,
              $.addsd,
              $.addss,
              $.addw,
              $.adox,
              $.aesdec,
              $.aesdeclast,
              $.aesenc,
              $.aesenclast,
              $.aeskeygenassist,
              $.and,
              $.andb,
              $.andl,
              $.andn,
              $.andpd,
              $.andps,
              $.andq,
              $.andw,
              $.blendvps,
              $.bsf,
              $.bsr,
              $.bswap,
              $.bt,
              $.btl,
              $.btr,
              $.bts,
              $.cbtw,
              $.cltd,
              $.cltq,
              $.cmova,
              $.cmovae,
              $.cmovb,
              $.cmovbe,
              $.cmove,
              $.cmovg,
              $.cmovge,
              $.cmovl,
              $.cmovle,
              $.cmovne,
              $.cmovns,
              $.cmovo,
              $.cmovp,
              $.cmovs,
              $.cmp,
              $.cmpb,
              $.cmpl,
              $.cmpq,
              $.cmpw,
              $.comisd,
              $.comiss,
              $.cpuid,
              $.cqto,
              $.cvtsd2ss,
              $.cvtsi2sd,
              $.cvtsi2sdl,
              $.cvtsi2sdq,
              $.cvtsi2ss,
              $.cvtsi2ssl,
              $.cvtss2sd,
              $.cvttsd2si,
              $.cvttss2si,
              $.cwtd,
              $.cwtl,
              $.data16,
              $.dec,
              $.div,
              $.divl,
              $.divq,
              $.divsd,
              $.divss,
              $.endbr64,
              $.femms,
              $.fildl,
              $.fldt,
              $.fmulp,
              $.fs,
              $.fstpl,
              $.gs,
              $.idiv,
              $.idivl,
              $.imul,
              $.inc,
              $.incl,
              $.insb,
              $.insl,
              $.kmovw,
              $.knotw,
              $.lea,
              $.leaveq,
              $.lock,
              $.maxsd,
              $.maxss,
              $.mfence,
              $.minsd,
              $.minss,
              $.mov,
              $.movabs,
              $.movapd,
              $.movaps,
              $.movb,
              $.movbe,
              $.movd,
              $.movdqa,
              $.movdqu,
              $.movhlps,
              $.movhps,
              $.movl,
              $.movq,
              $.movsb,
              $.movsbl,
              $.movsbq,
              $.movsbw,
              $.movsd,
              $.movslq,
              $.movss,
              $.movswl,
              $.movswq,
              $.movups,
              $.movw,
              $.movzbl,
              $.movzbq,
              $.movzbw,
              $.movzwl,
              $.mul,
              $.mulb,
              $.mull,
              $.mulq,
              $.mulsd,
              $.mulss,
              $.mulw,
              $.mulx,
              $.neg,
              $.negl,
              $.negq,
              $.nop,
              $.nopl,
              $.nopw,
              $.not,
              $.notl,
              $.notw,
              $.or,
              $.orb,
              $.orl,
              $.orq,
              $.orw,
              $.outsb,
              $.outsl,
              $.packuswb,
              $.paddd,
              $.paddq,
              $.paddw,
              $.palignr,
              $.pand,
              $.pandn,
              $.pblendw,
              $.pclmulhqhqdq,
              $.pclmullqhqdq,
              $.pclmullqlqdq,
              $.pcmpeqb,
              $.pcmpeqd,
              $.pcmpgtd,
              $.pextrb,
              $.pextrq,
              $.pextrw,
              $.pinsrb,
              $.pinsrd,
              $.pinsrw,
              $.pmaddubsw,
              $.pmaddwd,
              $.pmovmskb,
              $.pmuludq,
              $.pop,
              $.popcnt,
              $.por,
              $.prefetcht0,
              $.prefetcht1,
              $.pshufb,
              $.pshufd,
              $.pshufhw,
              $.pshuflw,
              $.pslld,
              $.pslldq,
              $.psllq,
              $.psrad,
              $.psrld,
              $.psrldq,
              $.psrlq,
              $.psrlw,
              $.psubb,
              $.psubd,
              $.psubq,
              $.psubusb,
              $.psubusw,
              $.punpckhbw,
              $.punpckhdq,
              $.punpckhqdq,
              $.punpckhwd,
              $.punpcklbw,
              $.punpckldq,
              $.punpcklqdq,
              $.punpcklwd,
              $.push,
              $.pushq,
              $.pxor,
              $.re,
              $.rep,
              $.repnz,
              $.repz,
              $.retq,
              $.rex,
              $.rex_B,
              $.rex_RB,
              $.rex_RXB,
              $.rex_W,
              $.rex_WB,
              $.rex_WRB,
              $.rex_WRXB,
              $.rex_XB,
              $.rol,
              $.roll,
              $.ror,
              $.rorl,
              $.rorx,
              $.sar,
              $.sarl,
              $.sarx,
              $.sbb,
              $.seta,
              $.setae,
              $.setb,
              $.setbe,
              $.sete,
              $.setg,
              $.setge,
              $.setl,
              $.setle,
              $.setne,
              $.setnp,
              $.setns,
              $.seto,
              $.setp,
              $.sha1msg1,
              $.sha1msg2,
              $.sha1nexte,
              $.sha1rnds4,
              $.shl,
              $.shld,
              $.shll,
              $.shlq,
              $.shlx,
              $.shr,
              $.shrd,
              $.shrl,
              $.shrq,
              $.shrx,
              $.shufpd,
              $.shufps,
              $.ss,
              $.sub,
              $.subb,
              $.subl,
              $.subpd,
              $.subq,
              $.subsd,
              $.subss,
              $.subw,
              $.test,
              $.testb,
              $.testl,
              $.tzcnt,
              $.ucomisd,
              $.ucomiss,
              $.ud2,
              $.unpckhpd,
              $.vaesenc,
              $.vaesenclast,
              $.vblendps,
              $.vblendvps,
              $.vbroadcasti128,
              $.vbroadcasti32x4,
              $.vbroadcastss,
              $.vcvtusi2sd,
              $.vdivsd,
              $.vextracti128,
              $.vextracti32x4,
              $.vinsertf128,
              $.vinserti128,
              $.vinserti32x4,
              $.vinserti64x4,
              $.vmovapd,
              $.vmovaps,
              $.vmovd,
              $.vmovdqa,
              $.vmovdqa32,
              $.vmovdqa64,
              $.vmovdqu,
              $.vmovdqu32,
              $.vmovdqu64,
              $.vmovq,
              $.vmovsd,
              $.vmovss,
              $.vmovups,
              $.vmulsd,
              $.vpackusdw,
              $.vpaddb,
              $.vpaddd,
              $.vpaddq,
              $.vpaddw,
              $.vpalignr,
              $.vpand,
              $.vpblendd,
              $.vpblendmd,
              $.vpbroadcastd,
              $.vpbroadcastq,
              $.vpclmulhqhqdq,
              $.vpclmulhqlqdq,
              $.vpclmullqhqdq,
              $.vpclmullqlqdq,
              $.vpcmpgtd,
              $.vpcmpltud,
              $.vperm2f128,
              $.vperm2i128,
              $.vpermd,
              $.vpermi2d,
              $.vpermq,
              $.vpermt2d,
              $.vpextrw,
              $.vpinsrb,
              $.vpinsrd,
              $.vpinsrq,
              $.vpinsrw,
              $.vpmaddubsw,
              $.vpmaddwd,
              $.vpmullw,
              $.vpmuludq,
              $.vpor,
              $.vprord,
              $.vprorq,
              $.vpshufb,
              $.vpshufd,
              $.vpslld,
              $.vpslldq,
              $.vpsllq,
              $.vpsllw,
              $.vpsrld,
              $.vpsrldq,
              $.vpsrlq,
              $.vpsrlw,
              $.vpsubd,
              $.vpsubq,
              $.vpsubusw,
              $.vpsubw,
              $.vpunpckhdq,
              $.vpunpckhqdq,
              $.vpunpckhwd,
              $.vpunpckldq,
              $.vpunpcklqdq,
              $.vpunpcklwd,
              $.vpxor,
              $.vpxord,
              $.vshufi32x4,
              $.vshufi64x2,
              $.vshufps,
              $.vsubsd,
              $.vucomisd,
              $.vucomiss,
              $.vunpckhpd,
              $.vunpckhps,
              $.vunpcklpd,
              $.vunpcklps,
              $.vxorps,
              $.vzeroall,
              $.vzeroupper,
              $.xchg,
              $.xgetbv,
              $.xor,
              $.xorl,
              $.xorpd,
              $.xorps,
              $.xorw,

              $.callq,
              $.ja,
              $.jae,
              $.jb,
              $.jbe,
              $.je,
              $.jg,
              $.jge,
              $.jl,
              $.jle,
              $.jmp,
              $.jmpq,
              $.jne,
              $.jno,
              $.jns,
              $.jo,
              $.jp,
              $.jrcxz,
              $.js,
              $.notrack)),
            optional($.comment),
            $._line_break
        ),
	
        adc: $ => seq( 'adc', optional(repeat(seq($.operand, ','))), optional($.operand)),
        adcx: $ => seq( 'adcx', optional(repeat(seq($.operand, ','))), optional($.operand)),
        add: $ => seq( 'add', optional(repeat(seq($.operand, ','))), optional($.operand)),
        addb: $ => seq( 'addb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        addl: $ => seq( 'addl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        addq: $ => seq( 'addq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        addr32: $ => seq( 'addr32', optional(repeat(seq($.operand, ','))), optional($.operand)),
        addsd: $ => seq( 'addsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        addss: $ => seq( 'addss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        addw: $ => seq( 'addw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        adox: $ => seq( 'adox', optional(repeat(seq($.operand, ','))), optional($.operand)),
        aesdec: $ => seq( 'aesdec', optional(repeat(seq($.operand, ','))), optional($.operand)),
        aesdeclast: $ => seq( 'aesdeclast', optional(repeat(seq($.operand, ','))), optional($.operand)),
        aesenc: $ => seq( 'aesenc', optional(repeat(seq($.operand, ','))), optional($.operand)),
        aesenclast: $ => seq( 'aesenclast', optional(repeat(seq($.operand, ','))), optional($.operand)),
        aeskeygenassist: $ => seq( 'aeskeygenassist', optional(repeat(seq($.operand, ','))), optional($.operand)),
        and: $ => seq( 'and', optional(repeat(seq($.operand, ','))), optional($.operand)),
        andb: $ => seq( 'andb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        andl: $ => seq( 'andl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        andn: $ => seq( 'andn', optional(repeat(seq($.operand, ','))), optional($.operand)),
        andpd: $ => seq( 'andpd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        andps: $ => seq( 'andps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        andq: $ => seq( 'andq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        andw: $ => seq( 'andw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        blendvps: $ => seq( 'blendvps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        bsf: $ => seq( 'bsf', optional(repeat(seq($.operand, ','))), optional($.operand)),
        bsr: $ => seq( 'bsr', optional(repeat(seq($.operand, ','))), optional($.operand)),
        bswap: $ => seq( 'bswap', optional(repeat(seq($.operand, ','))), optional($.operand)),
        bt: $ => seq( 'bt', optional(repeat(seq($.operand, ','))), optional($.operand)),
        btl: $ => seq( 'btl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        btr: $ => seq( 'btr', optional(repeat(seq($.operand, ','))), optional($.operand)),
        bts: $ => seq( 'bts', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cbtw: $ => seq( 'cbtw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cltd: $ => seq( 'cltd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cltq: $ => seq( 'cltq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmova: $ => seq( 'cmova', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovae: $ => seq( 'cmovae', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovb: $ => seq( 'cmovb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovbe: $ => seq( 'cmovbe', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmove: $ => seq( 'cmove', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovg: $ => seq( 'cmovg', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovge: $ => seq( 'cmovge', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovl: $ => seq( 'cmovl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovle: $ => seq( 'cmovle', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovne: $ => seq( 'cmovne', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovns: $ => seq( 'cmovns', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovo: $ => seq( 'cmovo', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovp: $ => seq( 'cmovp', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmovs: $ => seq( 'cmovs', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmp: $ => seq( 'cmp', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmpb: $ => seq( 'cmpb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmpl: $ => seq( 'cmpl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmpq: $ => seq( 'cmpq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cmpw: $ => seq( 'cmpw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        comisd: $ => seq( 'comisd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        comiss: $ => seq( 'comiss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cpuid: $ => seq( 'cpuid', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cqto: $ => seq( 'cqto', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cvtsd2ss: $ => seq( 'cvtsd2ss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cvtsi2sd: $ => seq( 'cvtsi2sd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cvtsi2sdl: $ => seq( 'cvtsi2sdl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cvtsi2sdq: $ => seq( 'cvtsi2sdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cvtsi2ss: $ => seq( 'cvtsi2ss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cvtsi2ssl: $ => seq( 'cvtsi2ssl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cvtss2sd: $ => seq( 'cvtss2sd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cvttsd2si: $ => seq( 'cvttsd2si', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cvttss2si: $ => seq( 'cvttss2si', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cwtd: $ => seq( 'cwtd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        cwtl: $ => seq( 'cwtl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        data16: $ => seq( 'data16', optional(repeat(seq($.operand, ','))), optional($.operand)),
        dec: $ => seq( 'dec', optional(repeat(seq($.operand, ','))), optional($.operand)),
        div: $ => seq( 'div', optional(repeat(seq($.operand, ','))), optional($.operand)),
        divl: $ => seq( 'divl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        divq: $ => seq( 'divq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        divsd: $ => seq( 'divsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        divss: $ => seq( 'divss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        endbr64: $ => seq( 'endbr64', optional(repeat(seq($.operand, ','))), optional($.operand)),
        femms: $ => seq( 'femms', optional(repeat(seq($.operand, ','))), optional($.operand)),
        fildl: $ => seq( 'fildl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        fldt: $ => seq( 'fldt', optional(repeat(seq($.operand, ','))), optional($.operand)),
        fmulp: $ => seq( 'fmulp', optional(repeat(seq($.operand, ','))), optional($.operand)),
        fs: $ => seq( 'fs', optional(repeat(seq($.operand, ','))), optional($.operand)),
        fstpl: $ => seq( 'fstpl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        gs: $ => seq( 'gs', optional(repeat(seq($.operand, ','))), optional($.operand)),
        idiv: $ => seq( 'idiv', optional(repeat(seq($.operand, ','))), optional($.operand)),
        idivl: $ => seq( 'idivl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        imul: $ => seq( 'imul', optional(repeat(seq($.operand, ','))), optional($.operand)),
        inc: $ => seq( 'inc', optional(repeat(seq($.operand, ','))), optional($.operand)),
        incl: $ => seq( 'incl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        insb: $ => seq( 'insb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        insl: $ => seq( 'insl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        kmovw: $ => seq( 'kmovw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        knotw: $ => seq( 'knotw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        lea: $ => seq( 'lea', optional(repeat(seq($.operand, ','))), optional($.operand)),
        leaveq: $ => seq( 'leaveq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        lock: $ => seq( 'lock', optional(repeat(seq($.operand, ','))), optional($.operand)),
        maxsd: $ => seq( 'maxsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        maxss: $ => seq( 'maxss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mfence: $ => seq( 'mfence', optional(repeat(seq($.operand, ','))), optional($.operand)),
        minsd: $ => seq( 'minsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        minss: $ => seq( 'minss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mov: $ => seq( 'mov', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movabs: $ => seq( 'movabs', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movapd: $ => seq( 'movapd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movaps: $ => seq( 'movaps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movb: $ => seq( 'movb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movbe: $ => seq( 'movbe', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movd: $ => seq( 'movd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movdqa: $ => seq( 'movdqa', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movdqu: $ => seq( 'movdqu', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movhlps: $ => seq( 'movhlps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movhps: $ => seq( 'movhps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movl: $ => seq( 'movl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movq: $ => seq( 'movq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movsb: $ => seq( 'movsb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movsbl: $ => seq( 'movsbl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movsbq: $ => seq( 'movsbq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movsbw: $ => seq( 'movsbw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movsd: $ => seq( 'movsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movslq: $ => seq( 'movslq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movss: $ => seq( 'movss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movswl: $ => seq( 'movswl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movswq: $ => seq( 'movswq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movups: $ => seq( 'movups', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movw: $ => seq( 'movw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movzbl: $ => seq( 'movzbl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movzbq: $ => seq( 'movzbq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movzbw: $ => seq( 'movzbw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        movzwl: $ => seq( 'movzwl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mul: $ => seq( 'mul', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mulb: $ => seq( 'mulb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mull: $ => seq( 'mull', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mulq: $ => seq( 'mulq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mulsd: $ => seq( 'mulsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mulss: $ => seq( 'mulss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mulw: $ => seq( 'mulw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        mulx: $ => seq( 'mulx', optional(repeat(seq($.operand, ','))), optional($.operand)),
        neg: $ => seq( 'neg', optional(repeat(seq($.operand, ','))), optional($.operand)),
        negl: $ => seq( 'negl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        negq: $ => seq( 'negq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        nop: $ => seq( 'nop', optional(repeat(seq($.operand, ','))), optional($.operand)),
        nopl: $ => seq( 'nopl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        nopw: $ => seq( 'nopw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        not: $ => seq( 'not', optional(repeat(seq($.operand, ','))), optional($.operand)),
        notl: $ => seq( 'notl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        notw: $ => seq( 'notw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        or: $ => seq( 'or', optional(repeat(seq($.operand, ','))), optional($.operand)),
        orb: $ => seq( 'orb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        orl: $ => seq( 'orl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        orq: $ => seq( 'orq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        orw: $ => seq( 'orw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        outsb: $ => seq( 'outsb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        outsl: $ => seq( 'outsl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        packuswb: $ => seq( 'packuswb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        paddd: $ => seq( 'paddd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        paddq: $ => seq( 'paddq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        paddw: $ => seq( 'paddw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        palignr: $ => seq( 'palignr', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pand: $ => seq( 'pand', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pandn: $ => seq( 'pandn', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pblendw: $ => seq( 'pblendw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pclmulhqhqdq: $ => seq( 'pclmulhqhqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pclmullqhqdq: $ => seq( 'pclmullqhqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pclmullqlqdq: $ => seq( 'pclmullqlqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pcmpeqb: $ => seq( 'pcmpeqb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pcmpeqd: $ => seq( 'pcmpeqd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pcmpgtd: $ => seq( 'pcmpgtd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pextrb: $ => seq( 'pextrb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pextrq: $ => seq( 'pextrq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pextrw: $ => seq( 'pextrw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pinsrb: $ => seq( 'pinsrb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pinsrd: $ => seq( 'pinsrd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pinsrw: $ => seq( 'pinsrw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pmaddubsw: $ => seq( 'pmaddubsw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pmaddwd: $ => seq( 'pmaddwd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pmovmskb: $ => seq( 'pmovmskb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pmuludq: $ => seq( 'pmuludq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pop: $ => seq( 'pop', optional(repeat(seq($.operand, ','))), optional($.operand)),
        popcnt: $ => seq( 'popcnt', optional(repeat(seq($.operand, ','))), optional($.operand)),
        por: $ => seq( 'por', optional(repeat(seq($.operand, ','))), optional($.operand)),
        prefetcht0: $ => seq( 'prefetcht0', optional(repeat(seq($.operand, ','))), optional($.operand)),
        prefetcht1: $ => seq( 'prefetcht1', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pshufb: $ => seq( 'pshufb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pshufd: $ => seq( 'pshufd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pshufhw: $ => seq( 'pshufhw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pshuflw: $ => seq( 'pshuflw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pslld: $ => seq( 'pslld', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pslldq: $ => seq( 'pslldq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psllq: $ => seq( 'psllq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psrad: $ => seq( 'psrad', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psrld: $ => seq( 'psrld', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psrldq: $ => seq( 'psrldq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psrlq: $ => seq( 'psrlq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psrlw: $ => seq( 'psrlw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psubb: $ => seq( 'psubb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psubd: $ => seq( 'psubd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psubq: $ => seq( 'psubq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psubusb: $ => seq( 'psubusb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        psubusw: $ => seq( 'psubusw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        punpckhbw: $ => seq( 'punpckhbw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        punpckhdq: $ => seq( 'punpckhdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        punpckhqdq: $ => seq( 'punpckhqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        punpckhwd: $ => seq( 'punpckhwd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        punpcklbw: $ => seq( 'punpcklbw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        punpckldq: $ => seq( 'punpckldq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        punpcklqdq: $ => seq( 'punpcklqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        punpcklwd: $ => seq( 'punpcklwd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        push: $ => seq( 'push', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pushq: $ => seq( 'pushq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        pxor: $ => seq( 'pxor', optional(repeat(seq($.operand, ','))), optional($.operand)),
        re: $ => seq( 're', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rep: $ => seq( 'rep', optional(repeat(seq($.operand, ','))), optional($.operand)),
        repnz: $ => seq( 'repnz', optional(repeat(seq($.operand, ','))), optional($.operand)),
        repz: $ => seq( 'repz', optional(repeat(seq($.operand, ','))), optional($.operand)),
        retq: $ => seq( 'retq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rex: $ => seq( 'rex', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rex_B: $ => seq( 'rex.B', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rex_RB: $ => seq( 'rex.RB', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rex_RXB: $ => seq( 'rex.RXB', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rex_W: $ => seq( 'rex.W', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rex_WB: $ => seq( 'rex.WB', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rex_WRB: $ => seq( 'rex.WRB', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rex_WRXB: $ => seq( 'rex.WRXB', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rex_XB: $ => seq( 'rex.XB', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rol: $ => seq( 'rol', optional(repeat(seq($.operand, ','))), optional($.operand)),
        roll: $ => seq( 'roll', optional(repeat(seq($.operand, ','))), optional($.operand)),
        ror: $ => seq( 'ror', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rorl: $ => seq( 'rorl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        rorx: $ => seq( 'rorx', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sar: $ => seq( 'sar', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sarl: $ => seq( 'sarl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sarx: $ => seq( 'sarx', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sbb: $ => seq( 'sbb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        seta: $ => seq( 'seta', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setae: $ => seq( 'setae', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setb: $ => seq( 'setb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setbe: $ => seq( 'setbe', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sete: $ => seq( 'sete', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setg: $ => seq( 'setg', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setge: $ => seq( 'setge', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setl: $ => seq( 'setl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setle: $ => seq( 'setle', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setne: $ => seq( 'setne', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setnp: $ => seq( 'setnp', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setns: $ => seq( 'setns', optional(repeat(seq($.operand, ','))), optional($.operand)),
        seto: $ => seq( 'seto', optional(repeat(seq($.operand, ','))), optional($.operand)),
        setp: $ => seq( 'setp', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sha1msg1: $ => seq( 'sha1msg1', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sha1msg2: $ => seq( 'sha1msg2', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sha1nexte: $ => seq( 'sha1nexte', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sha1rnds4: $ => seq( 'sha1rnds4', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shl: $ => seq( 'shl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shld: $ => seq( 'shld', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shll: $ => seq( 'shll', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shlq: $ => seq( 'shlq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shlx: $ => seq( 'shlx', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shr: $ => seq( 'shr', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shrd: $ => seq( 'shrd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shrl: $ => seq( 'shrl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shrq: $ => seq( 'shrq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shrx: $ => seq( 'shrx', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shufpd: $ => seq( 'shufpd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        shufps: $ => seq( 'shufps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        ss: $ => seq( 'ss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        sub: $ => seq( 'sub', optional(repeat(seq($.operand, ','))), optional($.operand)),
        subb: $ => seq( 'subb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        subl: $ => seq( 'subl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        subpd: $ => seq( 'subpd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        subq: $ => seq( 'subq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        subsd: $ => seq( 'subsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        subss: $ => seq( 'subss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        subw: $ => seq( 'subw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        test: $ => seq( 'test', optional(repeat(seq($.operand, ','))), optional($.operand)),
        testb: $ => seq( 'testb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        testl: $ => seq( 'testl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        tzcnt: $ => seq( 'tzcnt', optional(repeat(seq($.operand, ','))), optional($.operand)),
        ucomisd: $ => seq( 'ucomisd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        ucomiss: $ => seq( 'ucomiss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        ud2: $ => seq( 'ud2', optional(repeat(seq($.operand, ','))), optional($.operand)),
        unpckhpd: $ => seq( 'unpckhpd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vaesenc: $ => seq( 'vaesenc', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vaesenclast: $ => seq( 'vaesenclast', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vblendps: $ => seq( 'vblendps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vblendvps: $ => seq( 'vblendvps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vbroadcasti128: $ => seq( 'vbroadcasti128', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vbroadcasti32x4: $ => seq( 'vbroadcasti32x4', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vbroadcastss: $ => seq( 'vbroadcastss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vcvtusi2sd: $ => seq( 'vcvtusi2sd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vdivsd: $ => seq( 'vdivsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vextracti128: $ => seq( 'vextracti128', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vextracti32x4: $ => seq( 'vextracti32x4', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vinsertf128: $ => seq( 'vinsertf128', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vinserti128: $ => seq( 'vinserti128', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vinserti32x4: $ => seq( 'vinserti32x4', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vinserti64x4: $ => seq( 'vinserti64x4', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovapd: $ => seq( 'vmovapd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovaps: $ => seq( 'vmovaps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovd: $ => seq( 'vmovd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovdqa: $ => seq( 'vmovdqa', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovdqa32: $ => seq( 'vmovdqa32', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovdqa64: $ => seq( 'vmovdqa64', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovdqu: $ => seq( 'vmovdqu', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovdqu32: $ => seq( 'vmovdqu32', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovdqu64: $ => seq( 'vmovdqu64', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovq: $ => seq( 'vmovq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovsd: $ => seq( 'vmovsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovss: $ => seq( 'vmovss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmovups: $ => seq( 'vmovups', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vmulsd: $ => seq( 'vmulsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpackusdw: $ => seq( 'vpackusdw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpaddb: $ => seq( 'vpaddb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpaddd: $ => seq( 'vpaddd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpaddq: $ => seq( 'vpaddq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpaddw: $ => seq( 'vpaddw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpalignr: $ => seq( 'vpalignr', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpand: $ => seq( 'vpand', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpblendd: $ => seq( 'vpblendd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpblendmd: $ => seq( 'vpblendmd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpbroadcastd: $ => seq( 'vpbroadcastd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpbroadcastq: $ => seq( 'vpbroadcastq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpclmulhqhqdq: $ => seq( 'vpclmulhqhqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpclmulhqlqdq: $ => seq( 'vpclmulhqlqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpclmullqhqdq: $ => seq( 'vpclmullqhqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpclmullqlqdq: $ => seq( 'vpclmullqlqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpcmpgtd: $ => seq( 'vpcmpgtd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpcmpltud: $ => seq( 'vpcmpltud', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vperm2f128: $ => seq( 'vperm2f128', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vperm2i128: $ => seq( 'vperm2i128', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpermd: $ => seq( 'vpermd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpermi2d: $ => seq( 'vpermi2d', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpermq: $ => seq( 'vpermq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpermt2d: $ => seq( 'vpermt2d', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpextrw: $ => seq( 'vpextrw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpinsrb: $ => seq( 'vpinsrb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpinsrd: $ => seq( 'vpinsrd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpinsrq: $ => seq( 'vpinsrq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpinsrw: $ => seq( 'vpinsrw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpmaddubsw: $ => seq( 'vpmaddubsw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpmaddwd: $ => seq( 'vpmaddwd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpmullw: $ => seq( 'vpmullw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpmuludq: $ => seq( 'vpmuludq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpor: $ => seq( 'vpor', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vprord: $ => seq( 'vprord', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vprorq: $ => seq( 'vprorq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpshufb: $ => seq( 'vpshufb', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpshufd: $ => seq( 'vpshufd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpslld: $ => seq( 'vpslld', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpslldq: $ => seq( 'vpslldq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsllq: $ => seq( 'vpsllq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsllw: $ => seq( 'vpsllw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsrld: $ => seq( 'vpsrld', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsrld: $ => seq( 'vpsrld', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsrldq: $ => seq( 'vpsrldq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsrlq: $ => seq( 'vpsrlq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsrlw: $ => seq( 'vpsrlw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsubd: $ => seq( 'vpsubd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsubq: $ => seq( 'vpsubq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsubusw: $ => seq( 'vpsubusw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpsubw: $ => seq( 'vpsubw', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpunpckhdq: $ => seq( 'vpunpckhdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpunpckhqdq: $ => seq( 'vpunpckhqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpunpckhwd: $ => seq( 'vpunpckhwd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpunpckldq: $ => seq( 'vpunpckldq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpunpcklqdq: $ => seq( 'vpunpcklqdq', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpunpcklwd: $ => seq( 'vpunpcklwd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpxor: $ => seq( 'vpxor', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vpxord: $ => seq( 'vpxord', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vshufi32x4: $ => seq( 'vshufi32x4', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vshufi64x2: $ => seq( 'vshufi64x2', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vshufps: $ => seq( 'vshufps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vsubsd: $ => seq( 'vsubsd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vucomisd: $ => seq( 'vucomisd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vucomiss: $ => seq( 'vucomiss', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vunpckhpd: $ => seq( 'vunpckhpd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vunpckhps: $ => seq( 'vunpckhps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vunpcklpd: $ => seq( 'vunpcklpd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vunpcklps: $ => seq( 'vunpcklps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vxorps: $ => seq( 'vxorps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vzeroall: $ => seq( 'vzeroall', optional(repeat(seq($.operand, ','))), optional($.operand)),
        vzeroupper: $ => seq( 'vzeroupper', optional(repeat(seq($.operand, ','))), optional($.operand)),
        xchg: $ => seq( 'xchg', optional(repeat(seq($.operand, ','))), optional($.operand)),
        xgetbv: $ => seq( 'xgetbv', optional(repeat(seq($.operand, ','))), optional($.operand)),
        xor: $ => seq( 'xor', optional(repeat(seq($.operand, ','))), optional($.operand)),
        xorl: $ => seq( 'xorl', optional(repeat(seq($.operand, ','))), optional($.operand)),
        xorpd: $ => seq( 'xorpd', optional(repeat(seq($.operand, ','))), optional($.operand)),
        xorps: $ => seq( 'xorps', optional(repeat(seq($.operand, ','))), optional($.operand)),
        xorw: $ => seq( 'xorw', optional(repeat(seq($.operand, ','))), optional($.operand)),

        callq: $ => seq( 'callq', $.fn),
        ja: $ => seq( 'ja', $.fn),
        jae: $ => seq( 'jae', $.fn),
        jb: $ => seq( 'jb', $.fn),
        jbe: $ => seq( 'jbe', $.fn),
        je: $ => seq( 'je', $.fn),
        jg: $ => seq( 'jg', $.fn),
        jge: $ => seq( 'jge', $.fn),
        jl: $ => seq( 'jl', $.fn),
        jle: $ => seq( 'jle', $.fn),
        jmp: $ => seq( 'jmp', $.fn),
        jmpq: $ => seq( 'jmpq', $.fn),
        jne: $ => seq( 'jne', $.fn),
        jno: $ => seq( 'jno', $.fn),
        jns: $ => seq( 'jns', $.fn),
        jo: $ => seq( 'jo', $.fn),
        jp: $ => seq( 'jp', $.fn),
        jrcxz: $ => seq( 'jrcxz', $.fn),
        js: $ => seq( 'js', $.fn),
        notrack: $ => seq( 'notrack', $.fn),

        _address: $ => prec.left(repeat1(/[0-9a-f]/)), //any hex number
        operand: $ => prec.left(repeat1(/[0-9a-zA-Z%$\(\)\-{}<>_:]/)),//any identifier
        fn: $ => prec.left(repeat1(/[\*0-9a-zA-Z%$_\(\)<>,:+{}&\[\];\.\w]/)),
        _two_bytes: $ => /[0-9a-f][0-9a-f]/

    }
});
