module.exports = grammar({
    name: 'asm', //Applicable for our dataset

    //word: $ => $.identifier, //这行的存在会产生Undefined symbol `ReferenceError`

    rules: {
        prog: $ => repeat($._line),
        _line_break: $ => '\n',
        comment: $ => choice(/#.*/, /===.*/),
        _line: $ => seq(
            $.address,
            ':',
            repeat($.two_bytes),
            optional(choice($.instruction, $.callq)),
            optional($.comment),
            $._line_break
        ),
        opcode: $ => choice(
            'adc',
            'adcx',
            'add',
            'addb',
            'addl',
            'addq',
            'addr32',
            'addsd',
            'addss',
            'addw',
            'adox',
            'aesdec',
            'aesdeclast',
            'aesenc',
            'aesenclast',
            'aeskeygenassist',
            'and',
            'andb',
            'andl',
            'andn',
            'andpd',
            'andps',
            'andq',
            'andw',
            'blendvps',
            'bsf',
            'bsr',
            'bswap',
            'bt',
            'btl',
            'btr',
            'bts',
            'cbtw',
            'cltd',
            'cltq',
            'cmova',
            'cmovae',
            'cmovb',
            'cmovbe',
            'cmove',
            'cmovg',
            'cmovge',
            'cmovl',
            'cmovle',
            'cmovne',
            'cmovns',
            'cmovo',
            'cmovp',
            'cmovs',
            'cmp',
            'cmpb',
            'cmpl',
            'cmpq',
            'cmpw',
            'comisd',
            'comiss',
            'cpuid',
            'cqto',
            'cvtsd2ss',
            'cvtsi2sd',
            'cvtsi2sdl',
            'cvtsi2sdq',
            'cvtsi2ss',
            'cvtsi2ssl',
            'cvtss2sd',
            'cvttsd2si',
            'cvttss2si',
            'cwtd',
            'cwtl',
            'data16',
            'dec',
            'div',
            'divl',
            'divq',
            'divsd',
            'divss',
            'endbr64',
            'femms',
            'fildl',
            'fldt',
            'fmulp',
            'fs',
            'fstpl',
            'gs',
            'idiv',
            'idivl',
            'imul',
            'inc',
            'incl',
            'insb',
            'insl',
            'kmovw',
            'knotw',
            'lea',
            'leaveq',
            'lock',
            'maxsd',
            'maxss',
            'mfence',
            'minsd',
            'minss',
            'mov',
            'movabs',
            'movapd',
            'movaps',
            'movb',
            'movbe',
            'movd',
            'movdqa',
            'movdqu',
            'movhlps',
            'movhps',
            'movl',
            'movq',
            'movsb',
            'movsbl',
            'movsbq',
            'movsbw',
            'movsd',
            'movslq',
            'movss',
            'movswl',
            'movswq',
            'movups',
            'movw',
            'movzbl',
            'movzbq',
            'movzbw',
            'movzwl',
            'mul',
            'mulb',
            'mull',
            'mulq',
            'mulsd',
            'mulss',
            'mulw',
            'mulx',
            'neg',
            'negl',
            'negq',
            'nop',
            'nopl',
            'nopw',
            'not',
            'notl',
            'notw',
            'or',
            'orb',
            'orl',
            'orq',
            'orw',
            'outsb',
            'outsl',
            'packuswb',
            'paddd',
            'paddq',
            'paddw',
            'palignr',
            'pand',
            'pandn',
            'pblendw',
            'pclmulhqhqdq',
            'pclmullqhqdq',
            'pclmullqlqdq',
            'pcmpeqb',
            'pcmpeqd',
            'pcmpgtd',
            'pextrb',
            'pextrq',
            'pextrw',
            'pinsrb',
            'pinsrd',
            'pinsrw',
            'pmaddubsw',
            'pmaddwd',
            'pmovmskb',
            'pmuludq',
            'pop',
            'popcnt',
            'por',
            'prefetcht0',
            'prefetcht1',
            'pshufb',
            'pshufd',
            'pshufhw',
            'pshuflw',
            'pslld',
            'pslldq',
            'psllq',
            'psrad',
            'psrld',
            'psrldq',
            'psrlq',
            'psrlw',
            'psubb',
            'psubd',
            'psubq',
            'psubusb',
            'psubusw',
            'punpckhbw',
            'punpckhdq',
            'punpckhqdq',
            'punpckhwd',
            'punpcklbw',
            'punpckldq',
            'punpcklqdq',
            'punpcklwd',
            'push',
            'pushq',
            'pxor',
            're',
            'rep',
            'repnz',
            'repz',
            'retq',
            'rex',
            'rex.B',
            'rex.RB',
            'rex.RXB',
            'rex.W',
            'rex.WB',
            'rex.WRB',
            'rex.WRXB',
            'rex.XB',
            'rol',
            'roll',
            'ror',
            'rorl',
            'rorx',
            'sar',
            'sarl',
            'sarx',
            'sbb',
            'seta',
            'setae',
            'setb',
            'setbe',
            'sete',
            'setg',
            'setge',
            'setl',
            'setle',
            'setne',
            'setnp',
            'setns',
            'seto',
            'setp',
            'sha1msg1',
            'sha1msg2',
            'sha1nexte',
            'sha1rnds4',
            'shl',
            'shld',
            'shll',
            'shlq',
            'shlx',
            'shr',
            'shrd',
            'shrl',
            'shrq',
            'shrx',
            'shufpd',
            'shufps',
            'ss',
            'sub',
            'subb',
            'subl',
            'subpd',
            'subq',
            'subsd',
            'subss',
            'subw',
            'test',
            'testb',
            'testl',
            'tzcnt',
            'ucomisd',
            'ucomiss',
            'ud2',
            'unpckhpd',
            'vaesenc',
            'vaesenclast',
            'vblendps',
            'vblendvps',
            'vbroadcasti128',
            'vbroadcasti32x4',
            'vbroadcastss',
            'vcvtusi2sd',
            'vdivsd',
            'vextracti128',
            'vextracti32x4',
            'vinsertf128',
            'vinserti128',
            'vinserti32x4',
            'vinserti64x4',
            'vmovapd',
            'vmovaps',
            'vmovd',
            'vmovdqa',
            'vmovdqa32',
            'vmovdqa64',
            'vmovdqu',
            'vmovdqu32',
            'vmovdqu64',
            'vmovq',
            'vmovsd',
            'vmovss',
            'vmovups',
            'vmulsd',
            'vpackusdw',
            'vpaddb',
            'vpaddd',
            'vpaddq',
            'vpaddw',
            'vpalignr',
            'vpand',
            'vpblendd',
            'vpblendmd',
            'vpbroadcastd',
            'vpbroadcastq',
            'vpclmulhqhqdq',
            'vpclmulhqlqdq',
            'vpclmullqhqdq',
            'vpclmullqlqdq',
            'vpcmpgtd',
            'vpcmpltud',
            'vperm2f128',
            'vperm2i128',
            'vpermd',
            'vpermi2d',
            'vpermq',
            'vpermt2d',
            'vpextrw',
            'vpinsrb',
            'vpinsrd',
            'vpinsrq',
            'vpinsrw',
            'vpmaddubsw',
            'vpmaddwd',
            'vpmullw',
            'vpmuludq',
            'vpor',
            'vprord',
            'vprorq',
            'vpshufb',
            'vpshufd',
            'vpslld',
            'vpslldq',
            'vpsllq',
            'vpsllw',
            'vpsrld',
            'vpsrldq',
            'vpsrlq',
            'vpsrlw',
            'vpsubd',
            'vpsubq',
            'vpsubusw',
            'vpsubw',
            'vpunpckhdq',
            'vpunpckhqdq',
            'vpunpckhwd',
            'vpunpckldq',
            'vpunpcklqdq',
            'vpunpcklwd',
            'vpxor',
            'vpxord',
            'vshufi32x4',
            'vshufi64x2',
            'vshufps',
            'vsubsd',
            'vucomisd',
            'vucomiss',
            'vunpckhpd',
            'vunpckhps',
            'vunpcklpd',
            'vunpcklps',
            'vxorps',
            'vzeroall',
            'vzeroupper',
            'xchg',
            'xgetbv',
            'xor',
            'xorl',
            'xorpd',
            'xorps',
            'xorw',
            // 'callq',
        ),

        instruction: $ => seq(
            $.opcode,
            optional(repeat(seq($.operand, choice(',', ' ')))),
            optional($.operand)
        ),
        callq: $ => seq(
            choice(
                'callq',
                'ja',
                'jae',
                'jb',
                'jbe',
                'je',
                'jg',
                'jge',
                'jl',
                'jle',
                'jmp',
                'jmpq',
                'jne',
                'jno',
                'jns',
                'jo',
                'jp',
                'jrcxz',
                'js',
                'notrack'
            ),
            $.fn
        ),

        address: $ => prec.left(repeat1(/[0-9a-f]/)), //any hex number
        operand: $ => prec.left(repeat1(/[0-9a-z%$\(\)-:{}<>A-Z_]/)), //any identifier
        fn: $ => prec.left(repeat1(/[*0-9a-zA-Z%$_\(\)<>,:+{}&\[\];\.]/)),
        two_bytes: $ => /[0-9a-f][0-9a-f]/

    }
});